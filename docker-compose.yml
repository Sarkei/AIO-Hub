services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aiohub_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-aiohub}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-aiohub_pass}
      POSTGRES_DB: ${POSTGRES_DB:-aiohub_main}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - aiohub_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-aiohub}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend (Node.js/Express + Prisma)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: aiohub_backend
    restart: always
    command: sh -c "npx prisma db push --accept-data-loss && npm start"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "4000:4000"
    volumes:
      # Nur node_modules Volume für Production
      - /app/node_modules
      # Dist-Ordner nicht überschreiben
      - /app/dist
    networks:
      - aiohub_net

  # Frontend (Next.js + Tailwind)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aiohub_frontend
    restart: always
    environment:
      NEXT_PUBLIC_API_URL: http://backend:4000
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - aiohub_net

  # Nginx Reverse Proxy
  proxy:
    image: nginx:alpine
    container_name: aiohub_proxy
    restart: always
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - aiohub_net

  # pgAdmin 4 - Database Management UI
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aiohub_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
    networks:
      - aiohub_net

networks:
  aiohub_net:
    driver: bridge

volumes:
  pgdata:
  pgadmin_data:
